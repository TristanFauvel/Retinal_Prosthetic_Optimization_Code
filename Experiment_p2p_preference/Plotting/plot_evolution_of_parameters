% acquisition_fun_name = 'kernelselfsparring';
% task = 'preference';
acquisition_fun_name = 'random';
task = 'preference';

subject = 'TF';
add_directories
T = load(data_table_file).T;
T= T(13:end,:);

indices_preference_kss = 1:size(T,1);
indices_preference_kss = indices_preference_kss(T.Task == task & T.Subject== subject & T.Acquisition==acquisition_fun_name & T.Misspecification == 0);

maxiter = 80;
% d= 8;
values = NaN(numel(indices_preference_kss), maxiter);
unknown_hyp = 1;

for j = 1:numel(indices_preference_kss)
    i = indices_preference_kss(j);
    filename = [experiment_path, '/Data/Data_Experiment_p2p_',char(T(i,:).Task),'/', char(T(i,:).Subject), '/', char(T(i,:).Subject), '_', char(T(i,:).Acquisition), '_experiment_',num2str(T(i,:).Index)];
    load(filename,'experiment')    
    values(j,:) = experiment.values_unknown_hyps;
end


add_directories
acuity_optimized = [];
acuity_optimal = [];
cs_optimized = [];
cs_optimal = [];
for i =1:numel(indices_preference_kss)
    index = indices_preference_kss(i);
    filename = [data_directory, '/Data_Experiment_p2p_',char(T(index,:).Task),'/', char(T(index,:).Subject), '/', char(T(index,:).Subject), '_', char(T(index,:).Acquisition), '_experiment_',num2str(T(index,:).Index)];
    load(filename, 'experiment');
    
    acuity_optimized = [acuity_optimized, experiment.E_VA_optimized];
    cs_optimized = [cs_optimized, experiment.E_CS_optimized];
    if strcmp(acquisition_fun_name, 'kernelselfsparring')
        acuity_optimal = [acuity_optimal, experiment.E_VA_optimal];
        cs_optimal = [cs_optimal, experiment.E_CS_optimal];
    end
end


legcell = cellstr(num2str(cs_optimized', '%-d'));
graphics_style_paper;

fig=figure();
fig.Color =  [1 1 1];
plot(1:maxiter, values, 'linewidth', linewidth);
box off
xlabel('Iteration')
ylabel('Value of the inferred optimum')
set(gca,'xlim',[1,maxiter])
title("Value")
% legend(legcell)

fig=figure();
fig.Color =  [1 1 1];
plot(1:maxiter, (values-values(:,1)), 'linewidth', linewidth);
box off
xlabel('Iteration')
ylabel('Value of the inferred optimum')
set(gca,'xlim',[1,maxiter])
title("Value")

zval = zscore(values,0,2);

fig=figure();
fig.Color =  [1 1 1];
plot(1:maxiter, zval-zval(:,1), 'linewidth', linewidth);
box off
xlabel('Iteration')
ylabel('Value of the inferred optimum')
set(gca,'xlim',[1,maxiter])
title("Z-scored value")
% legend(legcell)


fig=figure();
fig.Color =  [1 1 1];
subplot(1,2,1);
scatter(values(:,end),cs_optimized, markersize, 'k', 'filled');
pbaspect([1,1,1]);
xlabel('Value')
ylabel('CS')
subplot(1,2,2);
scatter(values(:,end),acuity_optimized, markersize, 'k', 'filled');
xlabel('Final value')
ylabel('VA')
pbaspect([1,1,1]);

fig=figure();
fig.Color =  [1 1 1];
subplot(1,2,1);
scatter(values(:,end) -values(:,1),cs_optimized, markersize, 'k', 'filled');
xlabel('Value')
ylabel('CS')
pbaspect([1,1,1]);
subplot(1,2,2);
scatter(values(:,end) -values(:,1),acuity_optimized, markersize, 'k', 'filled');
xlabel('Final value - Initial value')
ylabel('VA')
pbaspect([1,1,1]);



fig=figure();
fig.Color =  [1 1 1];
plot(1:maxiter, (values-min(values')')./(max(values')'-min(values')'), 'linewidth', linewidth);
box off
xlabel('Iteration')
ylabel('Minmax normalized value of the inferred optimum')
set(gca,'xlim',[1,maxiter])
title("Value")

fig=figure();
fig.Color =  [1 1 1];
plot(1:maxiter, (values-values(:,1))./(values(:,end)-values(:,1)), 'linewidth', linewidth);
box off
xlabel('Iteration')
ylabel('Normalized value of the inferred optimum')
set(gca,'xlim',[1,maxiter])
title("Value")

% zval = zscore(values,0,2)-min(zscore(values,0,2)')';
% fig=figure();
% fig.Color =  [1 1 1];
% subplot(1,2,1);
% scatter(zval(:,end),cs_optimized, markersize, 'k', 'filled');
% xlabel('Value')
% ylabel('CS')
% pbaspect([1,1,1]);
% subplot(1,2,2);
% scatter(zval(:,end),acuity_optimized, markersize, 'k', 'filled');
% xlabel('Value')
% ylabel('CS')
% pbaspect([1,1,1]);
xbest = NaN(numel(indices_preference_kss), 9, 80);
xparams = NaN(numel(indices_preference_kss), 9);

for i =1:numel(indices_preference_kss)
    index = indices_preference_kss(i);
    filename = [data_directory, '/Data_Experiment_p2p_',char(T(index,:).Task),'/', char(T(index,:).Subject), '/', char(T(index,:).Subject), '_', char(T(index,:).Acquisition), '_experiment_',num2str(T(index,:).Index)];
    load(filename, 'experiment');
    
    xbest(i, : ,:) = experiment.x_best_unknown_hyps;
    xparams(i, :) = experiment.model_params;
end

fig=figure('units','normalized','outerposition',[0 0 1 1]);
fig.Color =  [1 1 1];
fig.Name = 'Optimal parameters';
mc = 8;
params_names = {'$\rho  (\mu m)$','$\lambda  (\mu m)$','$\theta  (rad)$','$x  (\mu m)$', '$y  (\mu m)$', 'Magnitude', '$\beta_{+}$','$\beta_{-}$','z'};

for k = 1:mc
    subplot(2,mc/2,k)
    plot(squeeze(mean(sqrt((xbest(:,k,:)- xparams(:,k)).^2))), 'linewidth', linewidth); 
    %     yline(sqrt(rho), 'linewidth', linewidth, 'color', 'r'); hold off
    set(gca,'FontSize',Fontsize)
    ylabel([params_names{k}],'Fontsize',Fontsize)
    xlabel('Iteration')
    ylim([0, experiment.ub(k)-experiment.lb(k)])
    pbaspect([1 1 1])
    xlim([1, maxiter])
    box off
end
% savefig(fig, [figure_directory,filename_base , '_experiment_optimized_parameters_evolution.fig'])
% exportgraphics(fig, [figure_directory,filename_base , '_experiment_optimized_parameters_evolution.png'])
% exportgraphics(fig, [figure_directory,filename_base , '_experiment_optimized_parameters_evolution.eps'])
% 
